- hosts: 127.0.0.1
  connection: local
  vars:
    shell_path: "/usr/local/bin/bash"
  tasks:
    - name: Get user
      command: whoami
      register: username
    - debug:
        msg: "Current user: {{ username.stdout }}"

    - name: Create home directory directories
      file:
        path: "~/{{ item }}"
        state: directory
      with_items:
        - .aws
        - src
        - bin
        - work
        - personal
        - vim-snips

    - name: Clone git repos
      git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
        update: "{{ item.update | bool }}"
      with_items:
        - { repo: 'git@github.com:dstreby/dotfiles.git', dest: '~/dotfiles', update: 'yes' }
        - { repo: 'git@github.com:dstreby/aws-env.git', dest: '~/src/aws-env', update: 'yes' }

    - name: Tap Homebrew repositories
      homebrew_tap:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
      with_items:
        - { name: 'aws/tap', state: 'present' }
        - { name: 'domt4/chromium', state: 'present' }
        - { name: 'homebrew/cask-fonts', state: 'present' }
        - { name: 'homebrew/cask-versions', state: 'present' }
        - { name: 'johanhaleby/kubetail', state: 'present' }

    - name: Install tools with homebrew
      homebrew:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
      with_items:
        - { name: 'awscli', state: 'present' }
        - { name: 'aws-sam-cli', state: 'present' }
        - { name: 'bash', state: 'present' }
        - { name: 'bat', state: 'present' }
        - { name: 'calc', state: 'present' }
        - { name: 'cli53', state: 'present' }
        - { name: 'cloc', state: 'present' }
        - { name: 'coreutils', state: 'present' }
        - { name: 'exiftool', state: 'present' }
        - { name: 'ffmpeg', state: 'present' }
        - { name: 'fzf', state: 'present' }
        - { name: 'golang', state: 'present' }
        - { name: 'gnu-sed', state: 'present' }
        - { name: 'graphviz', state: 'present' }
        - { name: 'htop', state: 'present' }
        - { name: 'hub', state: 'present' }
        - { name: 'imagemagick', state: 'present' }
        - { name: 'ipcalc', state: 'present' }
        - { name: 'jq', state: 'present' }
        - { name: 'kubernetes-cli', state: 'present' }
        - { name: 'kubernetes-helm', state: 'present' }
        - { name: 'kubetail', state: 'present' }
        - { name: 'ldns', state: 'present' }
        - { name: 'libav', state: 'present' }
        - { name: 'lynx', state: 'present' }
        - { name: 'node', state: 'present' }
        - { name: 'openssl', state: 'present' }
        - { name: 'platformio', state: 'present' }
        - { name: 'poppler', state: 'present' }
        - { name: 'postgres', state: 'present' }
        - { name: 'protobuf', state: 'present' }
        - { name: 'pstree', state: 'present' }
        - { name: 'pwgen', state: 'present' }
        - { name: 'reattach-to-user-namespace', state: 'present' }
        - { name: 'rename', state: 'present' }
        - { name: 'telnet', state: 'present' }
        - { name: 'terraform', state: 'present' }
        - { name: 'tmux', state: 'present' }
        - { name: 'tree', state: 'present' }
        - { name: 'vault', state: 'present' }
        - { name: 'vim', state: 'present' }
        - { name: 'wget', state: 'present' }
        - { name: 'yq', state: 'present' }

    - name: Install homebrew casks
      homebrew_cask:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
      with_items:
        - { name: 'authy', state: 'installed' }
        - { name: 'docker-edge', state: 'installed' }
        - { name: 'font-fantasque-sans-mono', state: 'installed' }
        - { name: 'iterm2', state: 'installed' }
        - { name: 'keybase', state: 'installed' }
        - { name: 'mac-chromium', state: 'installed' }
        - { name: 'mactex', state: 'installed' }
        - { name: 'slack', state: 'installed' }
        - { name: 'wireshark', state: 'installed' }

    - name: Install tools with gem
      gem:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
      with_items:
        - { name: 'tmuxinator', state: 'present' }

    - name: Install virtual-env
      pip:
        name: virtualenv
      become: yes
      become_method: sudo

    - name: Add shell entry
      lineinfile:
        dest: /etc/shells
        line: "{{ shell_path }}"
      become: yes
      become_method: sudo

    - name: Check login shell
      command: "dscl . -read /Users/{{ username.stdout }} UserShell"
      register: login_shell

    - name: Set the login shell
      command: "chsh -s {{ shell_path }} {{ username.stdout }}"
      become: yes
      become_method: sudo
      when: login_shell.stdout.find( shell_path ) == -1

    - name: Create sym-links
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      with_items:
        - { src: '~/src/aws-env/aws-env', dest: '~/bin/aws-env' }

    - name: Enable atrun daemon
      command: launchctl load -w /System/Library/LaunchDaemons/com.apple.atrun.plist
      become: yes
      become_method: sudo

    - name: Install vim plugins
      command: vim +PlugInstall +qall
      register: vim_plugins
